* Handshake if we detect an email from a livewire enabled source - received email. Send email with our public key. After receiving public keys from other send our full contact details including bitmessage address.
* Handshake if we are given a livewire URI. Ask the other end for their full key (livewire URL to only have fingerprint), giving them our at the same time. Then send them our full contact details once we hae theirs
* Handle simple encrypted text messages
* Handle app routing of messages (we receive a message on the wire intended for an app how do we send it)
* Ensure apps can send out updates of shared data.
* Write demo apps relaxed and drawing app and wall app and cello
* Write BDD harness and tests
* Add the ability to freeze edges - this is from the traingles app
* Make edge reversible so we can get back to data that used to exist
* Have two parties in a conversation successfully request missing edges.
* Add support for imutable data records ie things that would record information from sensor at a certain time. Temp at 1pm is 26c
* Test performance of merging hundreds of edges

Finished
* Change AddEdge functions to addedges and send edges around in groups for performance reasons
* Change startnode and endnode addressess to be hashes
* Change md5 hashes to sha256
* Add a more realistic way of sending edges around. This would involve sending edges and adding them to a a document and detecting dangling edges and ophaned edges and whatever odd scnarios happen
* Test receiving an unplayable edge that is not a merge edge with a missing startnode




